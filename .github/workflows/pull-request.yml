name: Pull Request CI

on:
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      GOFLAGS: -buildvcs=false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          check-latest: true

      - name: Cache Go build and mod
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.62.0
          go install mvdan.cc/gofumpt@v0.7.0
          go install golang.org/x/tools/cmd/goimports@latest
          go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Download deps
        run: make deps

      - name: Cache golangci-lint
        uses: actions/cache@v4
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-golangci-lint-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golangci-lint-

      - name: Format check (gofumpt)
        run: |
          CHANGED=$(gofumpt -l .); if [ -n "$CHANGED" ]; then echo "$CHANGED" && echo "Run make format" && exit 1; fi

      - name: Imports check (goimports)
        run: |
          CHANGED=$(goimports -l .); if [ -n "$CHANGED" ]; then echo "$CHANGED" && echo "Run make format" && exit 1; fi

      - name: Lint
        run: make lint

      - name: Build
        run: make build

      - name: Vulnerability check
        run: govulncheck ./...

      - name: Test with coverage
        run: make test-coverage

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage.out
            coverage.html


